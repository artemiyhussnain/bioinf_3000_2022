#NEXUS
[ID: 8123509876]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 Phascolosorex_doriae,
    2 Dasycercus_cristicauda,
    3 Lutreolina_crassicaudata,
    4 Didelphis_pernigra,
    5 Didelphis_marsupialis,
    6 Didelphis_imperfecta,
    7 Didelphis_aurita,
    8 Didelphis_albiventris,
    9 Antechinus_flavipes,
   10 Phalanger_orientalis,
   11 Phascolarctos_cinereus,
   12 Monodelphis_domestica,
   13 Vombatus_ursinus,
   14 Gracilinanus_agilis,
   15 Gymnobelideus_leadbeateri,
   16 Antechinus_arktos,
   17 Murexia_melanurus,
   18 Macropus_fuliginosus,
   19 Tlacuatzin_canescens,
   20 Sarcophilus_harrisii,
   21 Echymipera_rufescens,
   22 Sminthopsis_crassicaudata,
   23 Dasyurus_hallucatus,
   24 Phascogale_tapoatafa,
   25 Macrotis_lagotis,
   26 Sminthopsis_douglasi,
   27 Metachirus_nudicaudatus,
   28 Tarsipes_rostratus,
   29 Notoryctes_typhlops,
   30 Pseudocheirus_peregrinus,
   31 Potorous_tridactylus,
   32 Caenolestes_fuliginosus,
   33 Thylamys_elegans,
   34 Dromiciops_gliroides,
   35 Rhyncholestes_raphanurus,
   36 Macropus_robustus,
   37 Didelphis_virginiana,
   38 Myrmecobius_fasciatus,
   39 Thylacinus_cynocephalus,
   40 Lagostrophus_fasciatus,
   41 Phalanger_vestitus,
   42 Lagorchestes_hirsutus,
   43 Dactylopsila_trivirgata,
   44 Distoechurus_pennatus,
   45 Petaurus_breviceps,
   46 Trichosurus_vulpecula,
   47 Isoodon_macrourus;
   tree tree_1 [p = 0.838, P = 0.838] = [&W 0.837748] ((23,20),(((24,17),(16,9)),((26,22),((39,38),(2,(((34,29),(((44,28),((45,43),(30,15))),((31,(40,(42,(36,18)))),((13,11),(46,(41,10)))))),((25,(47,21)),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_2 [p = 0.063, P = 0.901] = [&W 0.062914] ((23,20),(((24,17),(16,9)),((26,22),((39,38),(((34,29),(((44,28),((45,43),(30,15))),((31,(40,(42,(36,18)))),((13,11),(46,(41,10)))))),((25,(47,21)),((35,32),(2,((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_3 [p = 0.026, P = 0.927] = [&W 0.026490] ((23,20),(((24,17),(16,9)),((26,22),((39,38),((34,(29,2)),((((44,28),((45,43),(30,15))),((31,(40,(42,(36,18)))),((13,11),(46,(41,10))))),((25,(47,21)),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_4 [p = 0.007, P = 0.934] = [&W 0.006623] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,(((34,29),(((31,(40,(42,(36,18)))),((13,11),(46,(41,10)))),(((45,43),(30,15)),(44,(28,2))))),((25,(47,21)),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_5 [p = 0.007, P = 0.940] = [&W 0.006623] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,((25,(47,21)),(((((34,29),(31,(40,(42,(36,18))))),((13,11),(46,(41,10)))),((44,43),((30,15),(45,(28,2))))),((35,32),((19,12),((33,14),((37,(8,((7,(27,5)),(6,4)))),3)))))))))),1);
   tree tree_6 [p = 0.003, P = 0.944] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),((39,38),((29,(34,2)),((((44,28),(30,(43,(45,15)))),((31,(40,(42,(36,18)))),((13,11),(46,(41,10))))),((25,(47,21)),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_7 [p = 0.003, P = 0.947] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),((39,38),((29,(34,2)),((((44,28),(30,(43,(45,15)))),((13,11),((31,(40,(42,(36,18)))),(46,(41,10))))),((25,(47,21)),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_8 [p = 0.003, P = 0.950] = [&W 0.003311] (26,((((39,30),(44,20)),14),(((46,38),13),((37,19),(43,(22,((34,(40,(17,(24,((15,5),(28,((9,(8,(29,(36,(47,((25,(33,(21,16))),6)))))),((27,4),2)))))))),(32,(((42,41),35),((31,(18,(23,11))),(7,((45,(12,10)),3))))))))))),1);
   tree tree_9 [p = 0.003, P = 0.954] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,((((44,28),((45,43),(30,15))),((13,11),((31,(40,(42,(36,18)))),(46,(41,10))))),(((34,(35,32)),(25,(47,21))),((29,2),((19,12),((33,14),((37,(8,((7,(27,5)),(6,4)))),3)))))))))),1);
   tree tree_10 [p = 0.003, P = 0.957] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,((35,32),(((13,11),(((31,(40,(42,(36,18)))),((44,28),(30,(43,(45,15))))),(46,(41,10)))),(((34,(25,(47,21))),(29,2)),((19,12),((33,14),((37,(8,((7,(27,5)),(6,4)))),3)))))))))),1);
   tree tree_11 [p = 0.003, P = 0.960] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,(((34,29),(((44,28),((45,43),(30,15))),((31,(40,(42,(36,18)))),((13,11),(46,(41,10)))))),((25,(47,21)),((35,32),(2,((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3))))))))))),1);
   tree tree_12 [p = 0.003, P = 0.964] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(((39,(25,(47,21))),((((34,29),(31,(40,(42,(36,18))))),((13,11),(46,(41,10)))),((44,43),((30,15),(45,(28,2)))))),((35,32),((19,12),((33,14),((37,(8,((7,(27,5)),(6,4)))),3)))))))),1);
   tree tree_13 [p = 0.003, P = 0.967] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(43,(((40,31),(42,(36,18))),((((45,34),29),(((30,15),((13,11),(46,(41,10)))),((47,21),(44,(28,2))))),(((35,32),25),(39,(((33,14),(19,12)),((37,(8,((7,(27,5)),(6,4)))),3)))))))))),1);
   tree tree_14 [p = 0.003, P = 0.970] = [&W 0.003311] ((23,20),(((38,(26,22)),((24,17),(16,9))),((35,32),(((44,39),(43,((25,(47,21)),((((34,29),(31,(40,(42,(36,18))))),((13,11),(46,(41,10)))),((30,15),(45,(28,2))))))),((19,12),((33,14),((37,(8,((7,(27,5)),(6,4)))),3)))))),1);
   tree tree_15 [p = 0.003, P = 0.974] = [&W 0.003311] ((23,20),((47,21),(35,((((34,(13,11)),((41,10),(31,(40,(((46,42),(36,18)),(25,(((26,22),(38,19)),(17,(24,(16,9)))))))))),((43,((33,14),12)),((44,(39,32)),((30,15),(28,(45,2)))))),((37,(8,(((29,7),(27,5)),(6,4)))),3)))),1);
   tree tree_16 [p = 0.003, P = 0.977] = [&W 0.003311] (25,(2,(15,(((47,(37,((30,(35,18)),(46,17)))),5),(20,(24,(7,((22,(11,((44,((32,29),28)),(39,(9,8))))),((27,26),(36,(19,(12,(((14,13),4),(21,(40,(38,(45,((34,23),((16,(42,(33,(41,6)))),(43,(10,(31,3))))))))))))))))))))),1);
   tree tree_17 [p = 0.003, P = 0.980] = [&W 0.003311] ((23,20),((26,22),((17,(24,(16,9))),(6,(((44,29),(33,14)),((13,(46,(41,10))),(((45,15),((31,(40,(42,(36,18)))),((38,((34,30),28)),(39,11)))),((37,((35,32),(25,(47,21)))),(((43,(19,12)),4),(8,(7,((27,5),(2,3)))))))))))),1);
   tree tree_18 [p = 0.003, P = 0.983] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,((25,(47,21)),(((34,29),(((31,(40,(42,(36,18)))),((13,11),(46,(41,10)))),((43,(30,15)),(45,(44,(28,2)))))),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_19 [p = 0.003, P = 0.987] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,((29,2),((25,(47,21)),(((((34,(35,32)),(45,(44,28))),(43,(30,15))),((31,(40,(42,(36,18)))),((13,11),(46,(41,10))))),(14,(33,((19,12),((37,((8,(7,(27,5))),(6,4))),3))))))))))),1);
   tree tree_20 [p = 0.003, P = 0.990] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),((39,38),((29,(34,2)),(((13,11),(((44,28),(30,(43,(45,15)))),((31,(40,(42,(36,18)))),(46,(41,10))))),((25,(47,21)),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_21 [p = 0.003, P = 0.993] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((38,(26,22)),(((39,29),2),((33,14),(((46,45),((((34,(35,32)),28),(43,(30,15))),(44,((13,11),((40,(42,(36,18))),(31,(41,10))))))),((25,(47,21)),(6,(((7,(27,5)),(8,4)),((37,(19,12)),3))))))))),1);
   tree tree_22 [p = 0.003, P = 0.997] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,(((34,29),(((31,(40,(42,(36,18)))),((13,11),(46,(41,10)))),((45,(43,(30,15))),(44,(28,2))))),((25,(47,21)),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3)))))))))),1);
   tree tree_23 [p = 0.003, P = 1.000] = [&W 0.003311] ((23,20),(((24,17),(16,9)),((26,22),(38,(39,(2,(((34,29),(((44,28),((45,43),(30,15))),((31,(40,(42,(36,18)))),((13,11),(46,(41,10)))))),((25,(47,21)),((35,32),((19,12),((33,14),((37,((7,(27,5)),(8,(6,4)))),3))))))))))),1);
end;
